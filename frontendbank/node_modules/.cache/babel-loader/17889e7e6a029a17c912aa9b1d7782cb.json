{"ast":null,"code":"var _jsxFileName = \"/Users/ashkannadiri/Documents/dajngo-drf-bank-local/frontendbank/src/components/pages/Branches.js\";\nimport React, { Component } from 'react';\nimport Modal from '../layout/Modal';\nimport AddItem from '../layout/AddItem'; // import uuid from 'uuid'\n\nimport axios from 'axios'; // const api_url = 'https://bank-django-drf-local.herokuapp.com/branch/'\n\nconst custom_options = {\n  headers: {\n    'Origin': 'http://127.0.0.1:8000/',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n    'Content-Type': 'application/json',\n    'Accept': 'text/html; q=1.0, */*',\n    'X-Requested-With': 'XMLHttpRequest',\n    'Access-Control-Allow-Headers': 'X-Requested-With,content-type',\n    'Access-Control-Allow-Credentials': true\n  }\n};\n\nclass Branch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      branches: []\n    };\n\n    this.refreshBranches = branch => {\n      console.log(`${branch} @ ${Date.now().toString()}`);\n      axios.get('http://127.0.0.1:8000/branches/').then(res => this.setState({\n        branches: res.data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.addItem = (branch, id) => {\n      let body = {\n        \"branch\": branch,\n        \"address\": \"default address\"\n      }; // // body = JSON.stringify(body)\n      // console.log(body)\n      // // console.log(`${branch} @ ${Date.now().toString()}`)\n\n      axios.post('http://127.0.0.1:8000/branches/', body).then(res => this.setState({\n        branches: [...this.state.branches, res.data]\n      })).catch(err => console.log(err));\n    };\n\n    this.delBranch = id => {\n      axios.delete(`http://127.0.0.1:8000/branches/${id}/`).then(res => this.refreshBranches()); //.setState({ branches: [...this.state.branches.filter(branch => branch.id !== id)]})\n    };\n\n    this.markDeleted = id => {\n      this.setState({\n        branches: this.state.branches.map(branch => {\n          if (branch.id === id) {\n            branch.deleted = !branch.deleted;\n          }\n\n          return branch;\n        })\n      });\n    };\n\n    this.renderBranch = () => {\n      console.log(this.state.branches);\n      return this.state.branches.map(branch => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        key: branch.id,\n        branch: branch,\n        markDeleted: this.markDeleted,\n        delBranch: this.delBranch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })));\n    };\n  }\n\n  componentDidMount() {\n    this.refreshBranches();\n  } //refresh branch list\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(AddItem, {\n      placeholder: 'Branch Name',\n      addItem: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \" \", this.renderBranch());\n  }\n\n}\n\n;\nexport default Branch;","map":{"version":3,"sources":["/Users/ashkannadiri/Documents/dajngo-drf-bank-local/frontendbank/src/components/pages/Branches.js"],"names":["React","Component","Modal","AddItem","axios","custom_options","headers","Branch","state","branches","refreshBranches","branch","console","log","Date","now","toString","get","then","res","setState","data","results","catch","err","addItem","id","body","post","delBranch","delete","markDeleted","map","deleted","renderBranch","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Modal from '../layout/Modal';\nimport AddItem from '../layout/AddItem'\n// import uuid from 'uuid'\nimport axios from 'axios';\n\n\n\n// const api_url = 'https://bank-django-drf-local.herokuapp.com/branch/'\nconst custom_options = {\n    headers: {\n        'Origin' : 'http://127.0.0.1:8000/',\n        'Access-Control-Allow-Origin' : '*',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n        'Content-Type' : 'application/json',\n        'Accept' : 'text/html; q=1.0, */*',\n        'X-Requested-With' : 'XMLHttpRequest',\n        'Access-Control-Allow-Headers' : 'X-Requested-With,content-type',\n        'Access-Control-Allow-Credentials' : true,\n    }\n};\n\nclass Branch extends Component {\n\n    state = {\n        branches: []\n    }\n\n    componentDidMount() {\n        this.refreshBranches();\n    }\n\n\n    //refresh branch list\n    refreshBranches= (branch) => {\n        console.log(`${branch} @ ${Date.now().toString()}`)\n        axios.get('http://127.0.0.1:8000/branches/')\n            .then(res => this.setState({branches: res.data.results}))\n            .catch(err=> console.log(err))\n    }\n    //Add item\n    addItem = (branch, id) => {\n        let body = {\"branch\": branch , \"address\" :  \"default address\"}\n        // // body = JSON.stringify(body)\n        // console.log(body)\n        // // console.log(`${branch} @ ${Date.now().toString()}`)\n        axios\n            .post('http://127.0.0.1:8000/branches/',body)\n        .then(res => this.setState({ branches: [...this.state.branches, res.data]}))\n        .catch(err => console.log(err))\n    }\n     //Delete branch\n    delBranch = (id) => {\n        axios.delete(`http://127.0.0.1:8000/branches/${id}/`)\n            .then(res => this.refreshBranches())\n            //.setState({ branches: [...this.state.branches.filter(branch => branch.id !== id)]})\n    }\n    // Toggle delete\n    markDeleted = (id)=>{\n        this.setState({ branches: this.state.branches.map(branch => {\n           if(branch.id === id ){\n               branch.deleted = !branch.deleted\n           } \n           return branch\n           \n        }) });\n    }\n   \n \n    renderBranch = () =>  {\n        console.log(this.state.branches)\n        return this.state.branches.map((branch) => (\n            \n           <div>\n                <Modal \n                    key={branch.id}\n                    branch={branch} \n                    markDeleted={this.markDeleted} \n                    delBranch={this.delBranch}\n                />\n            </div>\n        )\n    )}\n\n        \n    render () {\n       return (\n           <div>\n               <AddItem placeholder={'Branch Name'} addItem={this.addItem}/> {\n                   this.renderBranch()\n               }\n           </div>\n       )\n   }\n};\n\n\n\nexport default Branch"]},"metadata":{},"sourceType":"module"}